/**!
 * Flickity Responsive v2.0.0
 * @author phucbm
 * @homepage https://github.com/phucbm/flickity-responsive
 * @license MIT 2022
 */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var o=t();for(var i in o)("object"==typeof exports?exports:e)[i]=o[i]}}(this,(()=>(()=>{"use strict";var e={d:(t,o)=>{for(var i in o)e.o(o,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:o[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{FlickityResponsive:()=>a});
/**!
 * Match Media Screen v0.0.1
 * @author phucbm
 * @homepage https://github.com/phucbm/match-media-screen
 * @license MIT 2022
 */
var o={d:(e,t)=>{for(var i in t)o.o(t,i)&&!o.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},i={};function r(e,t=!0){const o=[...e];return t?o.sort(((e,t)=>e.breakpoint<t.breakpoint?1:-1)):o.sort(((e,t)=>e.breakpoint>t.breakpoint?1:-1)),o}o.d(i,{o:()=>n});class n{constructor(e){if(this.object=e.object||void 0,this.object){if(this.onMatched=e.onMatched,this.onUpdate=e.onUpdate,!this.object.responsive)return this.currentObject={type:"no-responsive",lastBreakpoint:void 0,breakpoint:-1,object:this.mergeObject(-1,this.object)},"function"==typeof this.onMatched&&this.onMatched(this.currentObject),console.warn("Property object must have responsive array."),!1;this.isInherit=void 0===e.isInherit||e.isInherit,this.debounce=e.debounce||100,this.currentObject={breakpoint:void 0,object:{}},this.object.responsive=r(this.object.responsive),this.match(),window.addEventListener("resize",function(e,t=150){let o;return(...i)=>{clearTimeout(o),o=setTimeout((()=>{e.apply(this,i)}),t)}}((()=>this.match()),this.debounce))}else console.warn("Property object:{} must be provided.")}match(){let e=!1;for(let t=0;t<this.object.responsive.length;t++){const o=this.object.responsive[t];if(e=matchMedia(this.getQuery(t)).matches,e){this.currentObject.breakpoint!==o.breakpoint&&(this.currentObject={type:"responsive",lastBreakpoint:this.currentObject.breakpoint,breakpoint:o.breakpoint,object:this.mergeObject(o.breakpoint,o.settings)},"function"==typeof this.onMatched&&this.onMatched(this.currentObject));break}}e||-1===this.currentObject.breakpoint||(this.currentObject={type:"default",lastBreakpoint:this.currentObject.breakpoint,breakpoint:-1,object:this.mergeObject(-1,this.object)},"function"==typeof this.onMatched&&this.onMatched(this.currentObject)),"function"==typeof this.onUpdate&&this.onUpdate(this.currentObject)}getQuery(e){let t=`screen and (max-width:${this.object.responsive[e].breakpoint}px)`;const o=this.object.responsive[e+1];return o&&(t+=` and (min-width:${o.breakpoint+1}px)`),t}mergeObject(e,t){let o={...t};if(this.isInherit&&-1!==e){const t=r(this.object.responsive,!1);for(let i=0;i<t.length;i++)t[i].breakpoint>e&&(o={...t[i].settings,...o})}return o={...this.object,...o},delete o.responsive,o}}var s=i.o;const c=(e,t)=>{new s({object:t,onMatched:t=>{if("undefined"==typeof Flickity)return void console.warn("Flickity is undefined!");let o=Flickity.data(e);void 0!==o&&o.destroy(),o=new Flickity(e,t.object),o.resize()}})};class a{constructor(e,t){c(e,t)}}var b;return"undefined"!=typeof jQuery&&((b=jQuery).fn.flickityResponsive=function(e){b(this).get().forEach((t=>c(t,e)))}),t})()));